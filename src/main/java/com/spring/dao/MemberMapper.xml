<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- namespace = 연결되는 인터페이스 -->    
<mapper namespace="com.spring.dao.MemberInter">
	<insert id="join" parameterType="com.spring.dto.MemberDTO">
		<if test="div == '인턴 회원가입 요청'">
			INSERT INTO member(member_id, member_pw, member_email, member_family, member_div, member_eval) 
				VALUES (#{member_id}, #{member_pw}, #{member_email}, #{member_family}, #{member_div}, 0)
		</if>	
		<if test="div == '대리 회원가입 요청'">
			INSERT INTO member(member_id, job_no, member_pw, member_email, member_family, member_company, member_div, member_cert, member_eval, member_capture) 
				VALUES (#{member_id}, #{job_no}, #{member_pw}, #{member_email}, #{member_family}, #{member_company}, #{member_div}, 'N', 0, #{member_capture})
		</if>
	</insert>
	
	<select id="login" parameterType="String" resultType="com.spring.dto.MemberDTO">
		SELECT member_pw, member_div, job_no FROM member WHERE member_id = #{param1}
	</select>
	
	<!-- 중복 체크 -->
	<select id="overlay" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_id = #{param1}
	</select>
	
	<!-- 회원정보  -->
	<select id="member" resultType="com.spring.dto.MemberDTO">
		SELECT * FROM member WHERE member_id = #{param1}
	</select>
	
	<!-- 회원 정보 수정 -->
	 <update id="perUpdate" parameterType="hashMap">
	 	UPDATE member
	 	<set>
	 		<if test="pw!=''">member_pw = #{pw},</if>
	 		<if test="faily!=''">member_family = #{family},</if>
	 		<if test="email!=''">member_email = #{email}</if>
	 	</set>
	 	WHERE member_id = #{id}
	 </update>
	 
	 <!-- 회원 탈퇴 -->
	 <delete id="outMem">
	 	DELETE FROM member WHERE member_id = #{param1}
	 </delete>
	 
	 <!-- 회사 수정 -->
	 <update id="companyUpdate">
	 	UPDATE member SET member_company = #{param1}, member_capture = #{param2}, job_no = #{param3}, member_cert = 'N' WHERE member_id = #{param4}
	 </update>
	 
	 <!-- 회사 승인 리스트 -->
	 <select id="memAcception" parameterType="map" resultType="com.spring.dto.MemberDTO">
	 	SELECT rnum, member_id, member_company ,member_capture 
	 		FROM (SELECT ROW_NUMBER() OVER(ORDER BY member_capture) AS rnum, member_id, member_company ,member_capture 
	 			FROM member) WHERE rnum BETWEEN #{sNum} AND #{eNum} AND member_capture IS NOT NULL
	 </select>
	 
	 <!-- 회사 승인 리스트 갯수 -->
	 <select id="memAcceptListCnt" resultType="int">
	 	SELECT COUNT(*) FROM member WHERE member_capture IS NOT NULL
	 </select>
	 
	 <!-- 회사 인증 승인 -->
	 <update id="memAcceptOk">
	 	UPDATE member SET member_capture = null, member_div = '대리', member_cert = 'Y', member_eval = 0 WHERE member_id = #{param1}
	 </update>
	 
	 <!-- 회사 인증 거부 -->
	 <update id="memAcceptNo">
	 	UPDATE member SET member_capture = null, member_div = '인턴', member_cert = 'N' WHERE member_id = #{param1}
	 </update>
</mapper>