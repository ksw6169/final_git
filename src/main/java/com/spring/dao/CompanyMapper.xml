<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace = 연결되는 인터페이스 -->
<mapper namespace="com.spring.dao.CompanyInter">
	<select id="companyList" parameterType="hashMap"
		resultType="com.spring.dto.CompanyDTO">
		SELECT rnum, company_no, company_name, company_eval, company_bHit
		FROM(SELECT
		ROW_NUMBER() OVER(ORDER BY company_no DESC) AS rnum, company_no,
		company_name, company_eval, company_bHit FROM company
		<where>
			<if test="keyword!=null and !keyword.equals('')">
				company_name LIKE '%'||#{keyword}||'%'
			</if>
		</where>
		) WHERE rnum BETWEEN 1 AND #{pagingEnd} ORDER BY company_name ASC
	</select>

	<select id="companyDetail"
		resultType="com.spring.dto.CompanyDTO">

		SELECT * FROM company WHERE company_no= #{param1}
	</select>
	
	<update id="companyUpHit">
		UPDATE company SET company_bHit=company_bHit+1 WHERE company_no=#{param1}
	</update>

	<select id="companyCommentList"
		resultType="com.spring.dto.EvaluationDTO">
		SELECT rnum, evaluation_no,company_no, member_id, evaluation_year,
		evaluation_salary, evaluation_night, evaluation_rest,
		evaluation_intern, evaluation_vacation, evaluation_comment,evaluation_date
		FROM(SELECT
		ROW_NUMBER() OVER(ORDER BY evaluation_no DESC) AS rnum, evaluation_no, company_no,
		member_id, evaluation_year, evaluation_salary, evaluation_night,
		evaluation_rest, evaluation_intern, evaluation_vacation,
		evaluation_comment,evaluation_date FROM evaluation)
		<where>
			company_no=#{param1}
			<if test="param2!=null">
				AND (rnum BETWEEN 1 AND #{param2})
			</if>
		</where>
		ORDER BY evaluation_no DESC
	</select>

	<insert id="evalWrite"
		parameterType="com.spring.dto.EvaluationDTO">
		INSERT INTO evaluation(evaluation_no, company_no,
		member_id, evaluation_year, evaluation_salary, evaluation_night,
		evaluation_rest, evaluation_intern, evaluation_vacation,
		evaluation_comment, evaluation_date)
		<if test="evaluation_comment==null||evaluation_comment.equals('')">
			VALUES(evaluation_seq.NEXTVAL,#{company_no},#{member_id},#{evaluation_year},#{evaluation_salary},#{evaluation_night},#{evaluation_rest},#{evaluation_intern},#{evaluation_vacation},'작성내용이 없습니다.',SYSDATE)
		</if>
		<if test="!(evaluation_comment==null||evaluation_comment.equals(''))">
			VALUES(evaluation_seq.NEXTVAL,#{company_no},#{member_id},#{evaluation_year},#{evaluation_salary},#{evaluation_night},#{evaluation_rest},#{evaluation_intern},#{evaluation_vacation},#{evaluation_comment},SYSDATE)
		</if>
	</insert>

	<select id="evalUpdateForm" resultType="com.spring.dto.EvaluationDTO">
		SELECT * FROM evaluation WHERE
		evaluation_no=#{param1}
	</select>

	<update id="evalUpdate" parameterType="hashMap">
		UPDATE evaluation
		<set>
		evaluation_night=#{evaluation_night},
		evaluation_rest=#{evaluation_rest},
		evaluation_intern=#{evaluation_intern},
		evaluation_vacation=#{evaluation_vacation}
	 		<if test="evaluation_comment==null||evaluation_comment.equals('')">,evaluation_comment='작성내용이 없습니다.'</if>
	 		<if test="!(evaluation_comment==null||evaluation_comment.equals(''))">,evaluation_comment=#{evaluation_comment}</if>
	 	</set>
		WHERE evaluation_no =#{evaluation_no}
	</update>

	<update id="evalCnt">
		UPDATE company SET company_eval=company_eval+#{param2} WHERE company_no=#{param1}
	</update>

	<delete id="evalDelete">
		DELETE FROM evaluation WHERE evaluation_no=#{param1}
	</delete>
	
	
	<!--
		parameterType="com.file.dto.BoardBean" : 파라메터로 사용될 빈
		useGenertedKeys="true" : insert 후 키 생성 여부
		keyProperty="idx" : 키가 될 필드
		keyColumn="idx"  : 키가 저장될 컬럼
	 -->
	<!-- useGeneratedKeys="true" keyProperty="company_no" keyColumn="company_no" -->
	<insert id="companyWrite" parameterType="com.spring.dto.CompanyDTO">
		INSERT INTO company(company_no,company_name,company_salary,company_user,company_money,company_code,company_addr,company_eval,company_bHit)
		VALUES(company_seq.NEXTVAL,#{company_name},#{company_salary},#{company_user},#{company_money},#{company_code},#{company_addr},0,0)
	</insert>
	
	<update id="memberEvalCnt">
		UPDATE member SET member_eval=member_eval+#{param2} WHERE member_id=#{param1}
	</update>
</mapper>